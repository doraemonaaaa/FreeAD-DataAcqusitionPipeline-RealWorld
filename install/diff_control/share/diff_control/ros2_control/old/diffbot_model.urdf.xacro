<?xml version="1.0"?>

<robot name="sam_bot" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Define robot constants -->

  <xacro:property name="base_width" value="0.32"/>
  <xacro:property name="base_length" value="0.8"/>
  <xacro:property name="base_height" value="0.41"/>

  <xacro:property name="wheel_radius" value="0.09"/>
  <xacro:property name="wheel_mass" value="1"/>
  <xacro:property name="wheel_width" value="0.04"/>
  <xacro:property name="wheel_ygap" value="0.04"/>
  <!-- <xacro:property name="wheel_zoff" value="0.16"/> -->
  <xacro:property name="wheel_zoff" value="0.20"/>
  <!-- <xacro:property name="wheel_xoff" value="0.3475"/> -->
  <xacro:property name="wheel_xoff" value="0.20"/>

  <xacro:property name="caster_xoff" value="0.25"/>

  <!-- Define some commonly used intertial properties  -->
  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>      
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />      
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/> 
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
    </inertial>
  </xacro:macro>
  
  <!-- Robot Base -->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="Cyan">
        <color rgba="0 1.0 1.0 1.0"/>
      </material>
    </visual>

    <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>

    <xacro:box_inertia m="1" w="${base_width}" d="${base_length}" h="${base_height}"/>
  </link>

  
   <!-- Robot Footprint -->
  <link name="base_footprint">
  	<xacro:box_inertia m="0" w="0" d="0" h="0"/>
  </link>

  <joint name="base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_footprint"/>
    <origin xyz="0.0 0.0 ${-(wheel_radius+wheel_zoff)}" rpy="0 0 0"/>
  </joint>

    <joint name="left_wheel_joint" type="continuous">
      <parent link="base_link"/>
      <child link="left_wheel"/>
      <origin xyz="${-wheel_xoff} ${(base_width/2+wheel_ygap/2)} ${-wheel_zoff}" rpy="-${pi/2} 0 0" />
      <axis xyz="0 0 1"/>
  </joint>

  <link name="left_wheel">
      <visual>
          <geometry>
              <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
          </geometry>
          <material name="blue"/>
      </visual>
      <collision>
          <geometry>
              <sphere radius="${wheel_radius}"/>
          </geometry>
      </collision>
      <xacro:cylinder_inertia m="${wheel_mass}" h="${wheel_width}" r="${wheel_radius}"/>
  </link>

  <gazebo reference="left_wheel">
      <material>Gazebo/Blue</material>
  </gazebo>




  <!-- RIGHT WHEEL LINK -->

  <joint name="right_wheel_joint" type="continuous">
      <parent link="base_link"/>
      <child link="right_wheel"/>
      <origin xyz="${-wheel_xoff} ${-(base_width/2+wheel_ygap/2)} ${-wheel_zoff}" rpy="${pi/2} 0 0" />
      <axis xyz="0 0 -1"/>
  </joint>

  <link name="right_wheel">
      <visual>
          <geometry>
              <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
          </geometry>
          <material name="blue"/>
      </visual>
      <collision>
          <geometry>
              <sphere radius="${wheel_radius}"/>
          </geometry>
      </collision>
      <xacro:cylinder_inertia m="${wheel_mass}" h="${wheel_width}" r="${wheel_radius}"/>
  </link>

  <gazebo reference="right_wheel">
      <material>Gazebo/Blue</material>
  </gazebo>

    <!-- caster -->
    <!-- <xacro:macro name="caster" params="prefix x_reflect y_reflect">
      <link name="${prefix}_link">
        <visual>
          <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
          <geometry>
              <cylinder radius="${(wheel_radius+wheel_zoff-(base_height/2))}" length="${wheel_width}"/>
          </geometry>
          <material name="Gray">
            <color rgba="0.5 0.5 0.5 1.0"/>
          </material>
        </visual>
  
        <collision>
          <origin xyz="0 0 0" rpy="${pi/2} 0 0"/> 
          <geometry>
            <cylinder radius="${(wheel_radius+wheel_zoff-(base_height/2))}" length="${wheel_width}"/>
          </geometry>
        </collision>
  
        <xacro:cylinder_inertia m="0.5" r="${(wheel_radius+wheel_zoff-(base_height/2))}" h="${wheel_width}"/>
      </link>
  
      <joint name="${prefix}_joint" type="continuous">
        <parent link="base_link"/>
        <child link="${prefix}_link"/>
        <origin xyz="${x_reflect*caster_xoff} ${y_reflect*(base_width/2-wheel_ygap)} ${-(base_height/2)}" rpy="0 0 0"/>
        <axis xyz="1 1 1"/>
      </joint>
    </xacro:macro>
  
    <xacro:caster prefix="left_caster" x_reflect="1" y_reflect="1" />
    <xacro:caster prefix="right_caster" x_reflect="1" y_reflect="-1" /> -->
  

    <link name="front_caster">
      <visual>
        <geometry>
          <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
        </geometry>
        <material name="Cyan">
          <color rgba="0 1.0 1.0 1.0"/>
        </material>
      </visual>

      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
        </geometry>
      </collision>

      <xacro:sphere_inertia m="0.5" r="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
    </link>

    <joint name="caster_joint" type="fixed">
      <parent link="base_link"/>
      <child link="front_caster"/>
      <origin xyz="${caster_xoff} 0.0 ${-(base_height/2)}" rpy="0 0 0"/>
    </joint>


  <!-- Small wheels -->
  <!-- <xacro:macro name="caster" params="prefix y_reflect">
    <link name="${prefix}_link">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
            <cylinder radius="0.02" length="${wheel_width}"/>
        </geometry>
        <material name="Gray">
          <color rgba="0.5 0.5 0.5 1.0"/>
        </material>
      </visual>

      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/> 
        <geometry>
          <cylinder radius="0.02" length="${wheel_width}"/>
        </geometry>
      </collision>

      <xacro:cylinder_inertia m="3.5" r="0.02" h="${wheel_width}"/>
    </link>

    <joint name="${prefix}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="0.25 ${y_reflect*0.18} -0.235" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>

  <xacro:caster prefix="caster_l" y_reflect="1" />
  <xacro:caster prefix="caster_r" y_reflect="-1" /> -->

  <link name="imu_link">
    <visual>
      <geometry>
        <box size="0.05 0.05 0.02"/>
      </geometry>
    </visual>
    
    <collision>
      <geometry>
        <box size="0.05 0.05 0.02"/>
      </geometry>
    </collision>
      
    <xacro:box_inertia m="0.05" w="0.05" d="0.05" h="0.02"/>
  </link>

     
  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="-0.2175 0 0.23"/>
  </joint>

  <gazebo reference="imu_link">
  <sensor name="imu_sensor" type="imu">
   <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
      <ros>
        <namespace>/demo</namespace>
        <remapping>~/out:=imu</remapping>
      </ros>
      <initial_orientation_as_reference>false</initial_orientation_as_reference>
    </plugin>
    <always_on>true</always_on>
    <update_rate>100</update_rate>
    <visualize>true</visualize>
    <imu>
      <angular_velocity>
        <x>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </noise>
        </x>
        <y>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </noise>
        </y>
        <z>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </noise>
        </z>
      </angular_velocity>
      <linear_acceleration>
        <x>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </noise>
        </x>
        <y>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </noise>
        </y>
        <z>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </noise>
        </z>
      </linear_acceleration>
    </imu>
  </sensor>
</gazebo>
  
 <link name="lidar_link">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.125"/>
      <inertia ixx="0.001"  ixy="0"  ixz="0" iyy="0.001" iyz="0" izz="0.001" />
    </inertial>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
         <cylinder radius="0.06" length="0.09"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
         <cylinder radius="0.06" length="0.09"/>
      </geometry>
    </visual>
  </link>
    
  <joint name="lidar_joint" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_link"/>
    <origin xyz="0.1925 0 0.25" rpy="0 0 0"/>
  </joint>

  <gazebo reference="lidar_link">
    <sensor name="lidar" type="ray">
      <always_on>true</always_on>
      <visualize>true</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1.000000</resolution>
            <min_angle>0.000000</min_angle>
            <max_angle>6.280000</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.120000</min>
          <max>3.5</max>
          <resolution>0.015000</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>lidar_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>
    
</robot>
